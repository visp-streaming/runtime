 $temperatureSource = Source() {
  allowedLocations = "cloudlet1"
  inputFormat      = "rawTemperatureData"
  source           = "2001:db8:0:1::"
  mechanism        = listen
  type             = "TemperatureSensor"
  outputFormat     = "machineReadableTemperatureData"
 }
 $pressureSource = Source() {
  allowedLocations = "cloudlet1"
  inputFormat      = "rawPressureData"
  source           = "2001:db8:0:2::"
  mechanism        = listen
  type             = "PressureSensor"
  outputFormat     = "machineReadablePressureData"
 }
 $rotationSource = Source() {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadableRotationData"
  source           = "2001:db8:0:3::"
  mechanism        = listen
  type             = "RotationSensor"
  outputFormat     = "machineReadableRotationData"
 }
 $cycleSource = Source() {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadablecycleData"
  source           = "2001:db8:0:3::"
  mechanism        = listen
  type             = "cycleSensor"
  outputFormat     = "machineReadableCycleData"
 }
 $reasonOnShutdownOp = Operator($temperatureSource) {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadableTemperatureData"
  type             = "ReasonOnShutdown"
  outputFormat     = "shutdowndecisions"
  scalingThreshold = maxDelay = "10"
 }
 $filtertermperatureOp = Operator($temperatureSource) {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadableTemperatureData"
  type             = "FilterDamagedData"
  outputFormat     = "machineReadableTemperatureData"
  scalingThreshold = maxDelay = "100"
 }
 $filterpressureOp = Operator($pressureSource) {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadablePressureData"
  type             = "FilterDamagedData"
  outputFormat     = "machineReadablePressureData"
  scalingThreshold = maxDelay = "100"
 }
 $filterrotationOp = Operator($rotationSource) {
  allowedLocations = "cloudlet1"
  inputFormat      = "machineReadableRotationData"
  type             = "FilterDamagedData"
  outputFormat     = "machineReadableRotationData"
  scalingThreshold = maxDelay = "100"
 }
 $reasonKPI = Operator($filtertermperatureOp, $filterpressureOp, $filterrotationOp) {
  allowedLocations = "cloud"
  inputFormat      = "machineReadablePressureData", "machineReadableRotationData", "machineReadableTemperatureData", "machineReadablecycleData"
  type             = "ReasononKPI"
  outputFormat     = "resoningDecision"
  scalingThreshold = maxDelay = "1000"
 }
 $updateMaintenancePlanOp = Operator($reasonKPI) {
  allowedLocations = "cloud"
  inputFormat      = "resoningDecision"
  type             = "undateMaintenancePlan"
  outputFormat     = "maintenanceDecision"
  scalingThreshold = maxDelay = "100"
 }
 $updateProductionPlanOp = Operator($updateMaintenancePlanOp) {
  allowedLocations = "cloud"
  inputFormat      = "maintenanceDecision"
  type             = "updateProductionPlan"
  outputFormat     = "productionPlan"
  scalingThreshold = maxDelay = "200"
 }
 $storeDatasink = Sink($reasonKPI) {
  allowedLocations = all
  inputFormat      = "resoningDecision"
  type             = "storeHistoricData"
 }
 $notifiyUserSink = Sink($updateMaintenancePlanOp) {
  allowedLocations = all
  destination      = "2001:db8:0:5::"
  inputFormat      = "maintenanceDecision"
  type             = "informUser"
  outputFormat     = "processedMaintenanceRecommendation"
 }